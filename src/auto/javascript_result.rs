// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::translate::*;
use java_script_core;
use webkit2_sys;

glib_wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct JavascriptResult(Shared<webkit2_sys::WebKitJavascriptResult>);

    match fn {
        ref => |ptr| webkit2_sys::webkit_javascript_result_ref(ptr),
        unref => |ptr| webkit2_sys::webkit_javascript_result_unref(ptr),
        get_type => || webkit2_sys::webkit_javascript_result_get_type(),
    }
}

impl JavascriptResult {
    #[cfg_attr(feature = "v2_22", deprecated)]
    pub fn get_global_context(&self) -> Option<java_script_core::GlobalContextRef> {
        unsafe {
            from_glib_none(webkit2_sys::webkit_javascript_result_get_global_context(self.to_glib_none().0))
        }
    }

    #[cfg(any(feature = "v2_22", feature = "dox"))]
    pub fn get_js_value(&self) -> Option<java_script_core::Value> {
        unsafe {
            from_glib_none(webkit2_sys::webkit_javascript_result_get_js_value(self.to_glib_none().0))
        }
    }

    #[cfg_attr(feature = "v2_22", deprecated)]
    pub fn get_value(&self) -> Option<java_script_core::ValueRef> {
        unsafe {
            from_glib_none(webkit2_sys::webkit_javascript_result_get_value(self.to_glib_none().0))
        }
    }
}
